name: Build & Latest Beta

on:
  push:
  pull_request:
    paths-ignore:
      - '**.md'

env:
  USERNAME: uvcat7
  FEED_URL: https://nuget.pkg.github.com/uvcat7/index.json
  VCPKG_BINARY_SOURCES: "clear;nuget,https://nuget.pkg.github.com/uvcat7/index.json,readwrite"

jobs:
  windows:
    name: "Build Windows x64"
    runs-on: windows-2022
    permissions:
      contents: read
    steps:
      - name: Get AV
        uses: actions/checkout@v4
      - name: Get MSBuild
        uses: microsoft/setup-msbuild@v2
      - name: Obtain oggenc2.exe
        run: >
          curl https://www.rarewares.org/files/ogg/oggenc2.88-1.3.7-x64.zip --output oggenc.zip &&
          unzip oggenc.zip -d bin/
        shell: bash
      - name: Add NuGet sources
        shell: pwsh
        run: |
          .$(vcpkg fetch nuget) `
            sources add `
            -Source "${{ env.FEED_URL }}" `
            -StorePasswordInClearText `
            -Name GitHubPackages `
            -UserName "${{ env.USERNAME }}" `
            -Password "${{ secrets.GH_PACKAGES_TOKEN }}"
          .$(vcpkg fetch nuget) `
            setapikey "${{ secrets.GH_PACKAGES_TOKEN }}" `
            -Source "${{ env.FEED_URL }}"
      - name: Configure CMake
        run: >
          cmake -Bbuild -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_INSTALLATION_ROOT\scripts\buildsystems\vcpkg.cmake"
          -DVCPKG_TARGET_TRIPLET=x64-windows-static-md
      - name: Build AV
        run: cmake --build build --config Release --parallel "$env:NUMBER_OF_PROCESSORS"
      - name: Collect into a directory
        if: github.ref_name == 'beta'
        run: cmake --install build --config Release --prefix ./
      - name: Upload artifact
        if: github.ref_name == 'beta'
        uses: actions/upload-artifact@v4
        with:
          name: AV
          path: |
            bin/assets
            bin/noteskins
            bin/settings
            bin/ArrowVortex.exe
            bin/oggenc2.exe
          if-no-files-found: error
